<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_06) on Thu Mar 14 05:13:08 CDT 2013 -->
<title>Board</title>
<meta name="date" content="2013-03-14">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Board";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Board.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../model/rules/PieceHandler.html" title="class in model.rules"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?model/rules/Board.html" target="_top">Frames</a></li>
<li><a href="Board.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model.rules</div>
<h2 title="Class Board" class="title">Class Board</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.rules.Board</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../model/rules/QuartoBoard.html" title="class in model.rules">QuartoBoard</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">Board</span>
extends java.lang.Object</pre>
<div class="block">The Board class contains the game-dependent portion of the algorithm for computing the next valid states
 of the game from the current state. Specific games provide derived subclasses of Board. The derived
 subclass is responsible for filling in the game-specific visitor commands and providing an implementation
 of the constructInitialState() method, which yields the initial state of the game.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>zpconn</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../model/rules/Board.html#Board()">Board</a></strong>()</code>
<div class="block">This instantiates the visitor and just fills the visitor with a default command handler.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../model/rules/Board.html#checkWinningCondition(model.State)">checkWinningCondition</a></strong>(<a href="../../model/State.html" title="class in model">State</a>&nbsp;s)</code>
<div class="block">Determines whether or not the provided state is in a winning condition.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../model/State.html" title="class in model">State</a></code></td>
<td class="colLast"><code><strong><a href="../../model/rules/Board.html#constructInitialState()">constructInitialState</a></strong>()</code>
<div class="block">This Board class should be derived to provide game-specific implementations of this method.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Collection&lt;<a href="../../model/State.html" title="class in model">State</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../model/rules/Board.html#getAvailableMoves(model.IPiece, model.IPosition, model.State)">getAvailableMoves</a></strong>(<a href="../../model/IPiece.html" title="class in model">IPiece</a>&nbsp;piece,
                 <a href="../../model/IPosition.html" title="interface in model">IPosition</a>&nbsp;position,
                 <a href="../../model/State.html" title="class in model">State</a>&nbsp;state)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Board()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Board</h4>
<pre>public&nbsp;Board()</pre>
<div class="block">This instantiates the visitor and just fills the visitor with a default command handler.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getAvailableMoves(model.IPiece, model.IPosition, model.State)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAvailableMoves</h4>
<pre>public&nbsp;java.util.Collection&lt;<a href="../../model/State.html" title="class in model">State</a>&gt;&nbsp;getAvailableMoves(<a href="../../model/IPiece.html" title="class in model">IPiece</a>&nbsp;piece,
                                            <a href="../../model/IPosition.html" title="interface in model">IPosition</a>&nbsp;position,
                                            <a href="../../model/State.html" title="class in model">State</a>&nbsp;state)</pre>
</li>
</ul>
<a name="constructInitialState()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>constructInitialState</h4>
<pre>public&nbsp;<a href="../../model/State.html" title="class in model">State</a>&nbsp;constructInitialState()</pre>
<div class="block">This Board class should be derived to provide game-specific implementations of this method.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The initial state of the game.</dd></dl>
</li>
</ul>
<a name="checkWinningCondition(model.State)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>checkWinningCondition</h4>
<pre>public&nbsp;boolean&nbsp;checkWinningCondition(<a href="../../model/State.html" title="class in model">State</a>&nbsp;s)</pre>
<div class="block">Determines whether or not the provided state is in a winning condition.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>s</code> - The state to check.</dd>
<dt><span class="strong">Returns:</span></dt><dd>True if winning, false if not winning.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Board.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../model/rules/PieceHandler.html" title="class in model.rules"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?model/rules/Board.html" target="_top">Frames</a></li>
<li><a href="Board.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
